blueprint:
    name: Simple Aqara Cube Automation
    description: Control your Aqara Cube T1Pro
    domain: automation
    homeassistant:
        min_version: 2025.1.0

    input:
        required_input:
            name: Required input ðŸ‘€
            icon: mdi:alert-box
            collapsed: false
            description: >
                mqtt topic
            input:
                topic:
                    name: Topic
                    description: >
                        The main MQTT Topic for your cube.
                    default: "zigbee2mqtt/?"
                    selector:
                        text:
                            multiline: false

        optional_conditions:
            name: Optional conditionsðŸ¤“
            icon: mdi:alert-octagon-outline
            collapsed: true
            description: >
                Leave it as the default of you don't want to add a condition of your own.
            input:
                additional_conditions:
                    name: Additional conditions
                    description: |
                        Extra conditions you may want to add to this automation 
                        (Example: Home occupied, TV on, etc)
                    default: []
                    selector:
                        condition:

        side_actions:
            name: Side Actions
            icon: mdi:dice-3
            collapsed: true
            description: >
                Aktionen mit WÃ¼rfel Seiten
            input:
                side_1:
                    name: Seite 1
                    description: Face 1 is the one with the 'Aqara' LOGO
                    default: []
                    selector:
                        action: {}
                side_2:
                    name: Seite 2
                    default: []
                    selector:
                        action: {}
                side_3:
                    name: Seite 3
                    default: []
                    selector:
                        action: {}
                side_4:
                    name: Seite 4
                    default: []
                    selector:
                        action: {}
                side_5:
                    name: seite 5
                    default: []
                    selector:
                        action: {}
                side_6:
                    name: Seite 6
                    default: []
                    selector:
                        action: {}

        other_actions:
            name: Andere Aktionen
            icon: mdi:dice-multiple
            collapsed: true
            description: >
                Other Cube Actions
            input:
                double_tap:
                    name: Double tap
                    default: []
                    selector:
                        action: {}
                flip_90:
                    name: flip 90 degrees
                    default: []
                    selector:
                        action: {}
                flip_180:
                    name: flip 180 degrees
                    default: []
                    selector:
                        action: {}
                rotate_right:
                    name: rotate right
                    default: []
                    selector:
                        action: {}
                rotate_left:
                    name: rotate left
                    default: []
                    selector:
                        action: {}
                shake:
                    name: shake
                    default: []
                    selector:
                        action: {}
                throw:
                    name: throw
                    default: []
                    selector:
                        action: {}

trigger:
    - platform: mqtt
      topic: !input topic

variables:
    # Get the action command.
    action: >
        {% if trigger.payload_json.action is defined %}
          {{ trigger.payload_json.action }}
        {% else %}
          none
        {% endif %}

    # Get the angle.
    angle: >
        {% if trigger.payload_json.action_angle is number %}
          {{ trigger.payload_json.action_angle | float(0.0) }}
        {% else %}
          0.0
        {% endif %}

    # Get the side.
    side: >
        {% if trigger.payload_json.side is number %}
          {{ trigger.payload_json.side | int(0) }}
        {% else %}
          0
        {% endif %}

    # Get the side.
    last_side: >
        {% if trigger.payload_json.action_from_side is number %}
          {{ trigger.payload_json.action_from_side | int(0) }}
        {% else %}
          0
        {% endif %}

    # Get the operation_mode.
    op_mode: >
        {% if trigger.payload_json.operation_mode is defined %}
          {{ trigger.payload_json.operation_mode }}
        {% else %}
          none
        {% endif %}

    # Get the topic as a variable.
    topic_var: !input topic

conditions:
    - alias: Check for valid Action Mode triggers
      condition: template
      value_template: >
          {{ trigger.payload_json is defined and
            trigger.payload_json.operation_mode is defined and
            trigger.payload_json.action is defined and
            trigger.payload_json.operation_mode == "action_mode" and
            trigger.payload_json.action in ["rotate_right", "rotate_left",
            "flip90", "flip180", "slide", "tap", "shake", "throw"] }}

    - alias: User pick
      condition: !input additional_conditions

actions:
    - alias: Trigger-Daten ausgeben
      event: debug_cube
      event_data:
          trigger_payload_json: "{{ trigger.payload_json }}"
          operation_mode: "{{ trigger.payload_json.operation_mode }}"
          action: "{{ trigger.payload_json.action }}"
          last_side_val: "{{ trigger.payload_json.action_from_side }}"
          side: "{{ trigger.payload_json.side }}"

    - choose:
          - conditions: "{{ action == 'rotate_right' }}"
            sequence: !input rotate_right
          - conditions: "{{ action == 'rotate_left' }}"
            sequence: !input rotate_left
          - conditions: "{{ action == 'flip90' }}"
            sequence: !input flip_90
          - conditions: "{{ action == 'flip180' }}"
            sequence: !input flip_180
          - conditions: "{{ action == 'shake' }}"
            sequence: !input shake
          - conditions: "{{ action == 'throw' }}"
            sequence: !input throw
          - conditions: "{{ action == 'tap' }}"
            sequence: !input double_tap

    - choose:
          - conditions: "{{ side == 1 }}"
            sequence: !input side_1
          - conditions: "{{ side == 2 }}"
            sequence: !input side_2
          - conditions: "{{ side == 3 }}"
            sequence: !input side_3
          - conditions: "{{ side == 4 }}"
            sequence: !input side_4
          - conditions: "{{ side == 5 }}"
            sequence: !input side_5
          - conditions: "{{ side == 6 }}"
            sequence: !input side_6

mode: single
